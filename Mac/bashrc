# Improvind Bash ###############################################################
alias grep="grep --colour='auto'"
alias ls='gls -v --color=auto'
alias ll="ls -l"
alias l="ls -CF"
alias ip='ipython --no-banner'
alias pip-update="pip install --upgrade pip && pip freeze --local | grep -v \
'^\-e' | cut -d = -f 1  | xargs -n1 pip install -U"
alias latex-update="sudo tlmgr update --self --all --reinstall-forcibly-removed"
alias py="python"
alias jn='jupyter notebook'
alias jl='jupyter lab'
alias pl="ip --pylab"
alias eject="diskutil eject"
alias skim="open -a /Applications/Skim.app"
alias preview="open -a /Applications/Preview.app"
alias PPUU="conda activate PPUU"
alias   ..='cd ../'
alias  ...='cd ../../'
alias ....='cd ../../../'
alias   .3='cd ../../../'
alias   .4='cd ../../../../'
alias   .5='cd ../../../../../'
alias screen-off="pmset displaysleepnow"

# Create ssh tunnel via cims for Jupyter Notebook
# Run as: nb server_name
function nb {
    if [ -z "$1" ]; then
        echo -e '  > run as: \033[1;32m$\033[0m nb <my_server>'
        return
    fi
    echo "Connecting http://localhost:8000 -> $1:8888"
    read < <( ssh -NCqL 8000:localhost:8888 $1 & echo $! )
    echo "Done. PID = $REPLY"
}

# Connect remote server port 22 to localhost port 6000 for PyCharm
# Run as: pycharm server_name
function PyCharm {
    if [ -z "$1" ]; then
        echo -e '  > run as: \033[1;32m$\033[0m PyCharm <my_server>'
        return
    fi
    echo "Connecting localhost:6000 -> $1:22"
    read < <( ssh -NCqL 6000:localhost:22 $1 & echo $! )
    echo "Done. PID = $REPLY"
}

# Mount my box drive on my Mac
function MountMyBox {
    # ssh -L 2222:box795:22 $ACCESS -Nf
    # sshfs -p 2222 localhost:/ /Volumes/MyBox/
    sshfs mybox:/ /Volumes/MyBox
}

#Screen colours
export CLICOLOR=1
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

# Load homebrew
if [ -f /opt/homebrew/bin/brew ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -f /usr/local/Homebrew/bin/brew ]; then
    eval "$(/usr/local/Homebrew/bin/brew shellenv)"
else
    echo "brew not found :/"
fi


# Better ls colouring
if [[ -f $(brew --prefix)/bin/gdircolors && -f $HOME/.dir_colors ]]; then
    eval $(gdircolors -b $HOME/.dir_colors)
fi

# Coloured LESS (MAN) pages
export LESS_TERMCAP_mb=$(printf '\e[01;31m') # enter blinking mode – red
export LESS_TERMCAP_md=$(printf '\e[01;35m') # enter double-bright mode – bold, magenta
export LESS_TERMCAP_me=$(printf '\e[0m') # turn off all appearance modes (mb, md, so, us)
export LESS_TERMCAP_se=$(printf '\e[0m') # leave standout mode
export LESS_TERMCAP_so=$(printf '\e[01;33m') # enter standout mode – yellow
export LESS_TERMCAP_ue=$(printf '\e[0m') # leave underline mode
export LESS_TERMCAP_us=$(printf '\e[04;36m') # enter underline mode – cyan

# Use Vim key binding in Bash and editor
set -o vi
export EDITOR="vim"

# Essential bash completion
if [ -f $(brew --prefix)/etc/bash_completion ]
then
    source $(brew --prefix)/etc/bash_completion
fi

# Fix Catalina zsh shit warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# Git settings #################################################################
name=$(networksetup -getcomputername)

function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo "*"
}
function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}
export PS1="\[\e[1;35m\]\u\[\e[38;5;255m\]@\[\e[1;34m\]$name \
\[\e[1;33m\]\w\[\e[0m\] \$(parse_git_branch)\n\[\e[1;32m\]$\[\e[0m\] "
export PS2="\[\e[1;31m\]>\[\e[0m\] "
export PAGER="less -R"

# Shortcuts for CIMS machines ##################################################
#Some useful EXPORTs
export NYU="nyu.edu"
export CIMS="cims.$NYU"
export CS="cs.$NYU"
export ACCESS="access.$CIMS"
export CASSIO="cassio"
export MYBOX="mybox"

# and corresponding ALIASes
alias Access="ssh $ACCESS"
alias Cassio="ssh $CASSIO"
alias MyBox="ssh $MYBOX"

# with X forwarding
alias AccessX="ssh -Y $ACCESS"
alias MyBoxX="ssh -Y $MYBOX"

# Find and open papers #########################################################
# Adapted from https://superuser.com/a/1293358/224792
# Find any item matching search query in file name
function spot {
  mdfind "kMDItemDisplayName=='*$1*'cd";
}

# Restrict to files under (recursive) a specific path
function findpaper {
    mdfind \
        -onlyin "$HOME/NYU/Articles" \
        -onlyin "$HOME/NYU/Old articles" \
        "kMDItemDisplayName=='*$1*'cd";
}

# Default to open the first entry unless 2nd positional argument is given
function openpaper {
    FILEID=$(printf "%sp" ${2:-1})
    open "$(findpaper $1 | sed -n "${FILEID}")"
}

# Trelify ######################################################################
export TRELIFY="ubuntu@3.94.44.239"
alias Trelify="ssh -i ~/.ssh/trelify-pollution-image.pem $TRELIFY"

# Created by `pipx` on 2024-08-28 22:28:30
export PATH="$PATH:/Users/atcold/.local/bin"

# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/atcold/.lmstudio/bin"

# Add Gollama to PATH
export PATH="$PATH:$HOME/go/bin"
